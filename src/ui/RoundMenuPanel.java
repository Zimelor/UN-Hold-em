/*
 * The MIT License
 *
 * Copyright 2016 Miguel Angel.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package ui;

import business.GameEngine;
import business.RoundThread;
import data.Player;
import java.awt.Graphics;

/**
 *
 * @author Miguel Angel
 */
public class RoundMenuPanel extends javax.swing.JPanel {

    private int menu;
    private RoundThread round;

    /**
     * Creates new form RoundMenuPanel
     */
    public RoundMenuPanel() {
        menu = 0;
        initComponents();
        enableButtons(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerInfoPanel1 = new ui.PlayerInfoPanel();
        checkButton = new javax.swing.JButton();
        callButton = new javax.swing.JButton();
        raiseButton = new javax.swing.JButton();
        foldButton = new javax.swing.JButton();
        allInButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(360, 90));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(playerInfoPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 70));

        checkButton.setText("Check");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });
        add(checkButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 11, -1, -1));

        callButton.setText("Call");
        callButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callButtonActionPerformed(evt);
            }
        });
        add(callButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 11, -1, -1));

        raiseButton.setText("Raise");
        raiseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raiseButtonActionPerformed(evt);
            }
        });
        add(raiseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 11, -1, -1));

        foldButton.setText("Fold");
        foldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foldButtonActionPerformed(evt);
            }
        });
        add(foldButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 40, -1, -1));

        allInButton.setText("All In");
        allInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allInButtonActionPerformed(evt);
            }
        });
        add(allInButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        menu = 1;
        notifyRound();
    }//GEN-LAST:event_checkButtonActionPerformed

    private void callButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callButtonActionPerformed
        menu = 2;
        notifyRound();
    }//GEN-LAST:event_callButtonActionPerformed

    private void raiseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raiseButtonActionPerformed
        menu = 3;
        notifyRound();
    }//GEN-LAST:event_raiseButtonActionPerformed

    private void foldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foldButtonActionPerformed
        menu = 4;
        notifyRound();
    }//GEN-LAST:event_foldButtonActionPerformed

    private void allInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allInButtonActionPerformed
        menu = 5;
        notifyRound();
    }//GEN-LAST:event_allInButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allInButton;
    private javax.swing.JButton callButton;
    private javax.swing.JButton checkButton;
    private javax.swing.JButton foldButton;
    private ui.PlayerInfoPanel playerInfoPanel1;
    private javax.swing.JButton raiseButton;
    // End of variables declaration//GEN-END:variables

    void setPlayer(Player user) {
        playerInfoPanel1.setPlayer(user);
    }

    public int getMenu() {
        return this.menu;
    }

    public final void enableButtons(Boolean foo) {
        checkButton.setEnabled(foo);
        callButton.setEnabled(foo);
        raiseButton.setEnabled(foo);
        foldButton.setEnabled(foo);
        allInButton.setEnabled(foo);
    }

    public void disableCheck() {
        checkButton.setEnabled(false);
    }

    public PlayerInfoPanel getUserPanel() {
        return this.playerInfoPanel1;
    }
    
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        this.playerInfoPanel1.paintComponent(g);
    }

    private void notifyRound() {
        GameEngine.getInstance().getRoundThread().setMenu(menu);
        enableButtons(false);
        synchronized (GameEngine.ui) {
            GameEngine.ui.notifyAll();
        }

    }
}
